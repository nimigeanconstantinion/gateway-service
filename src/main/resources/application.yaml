spring:
  cloud:
    compatibility-verifier:
      enabled: false
    gateway:
      routes:
        - id:  command
          uri: http://localhost:8081
          predicates:
            - Path=/command/**
          filters:
            - RewritePath=/(?<segment>.*), /api/v1/$\{segment}
        - id: query
          uri: http://localhost:8082
          predicates:
            - Path=/query/**
          filters:
            - RewritePath=/(?<segment>.*), /api/v1/$\{segment}
        - id: nserver
          uri: http://localhost:8080
          predicates:
            - Path=/server/**
          filters:
            - RewritePath=/(?<segment>.*), /api/v1/$\{segment}
        - id: ui
          uri: http://localhost:3000
          predicates:
            - Path=/ui/**
          filters:
            - RewritePath=/ui/(?<segment>.*), /${segment}
        - id: ui-js-assets
          uri: http://localhost:3000
          predicates:
            - Path=/static/js/**
          filters:
            - RewritePath=/static/js/(?<filename>.*), /static/js/${filename}
      globalcors:
        corsConfigurations:
          '[/**]':
            allowed-origins: "http://localhost:5000"  # Updated to reflect the gateway's address if served through the gateway.
            allowed-methods: "GET, POST, PUT, DELETE, OPTIONS"
            allowed-headers: "Authorization, Content-Type, Accept"
            allow-credentials: true
            max-age: 1800 # 30 minutes
  application:
    name: gateway
  zipkin:
    base-url: http://zipkin:9411/
    collector:
      host: zipkin

  sleuth:
    sampler:
      probability: 1.0
server:
  port: 5000

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
    fetch-registry: true
    register-with-eureka: true

management:
  endpoint:
    health:
      show-details: ALWAYS
  endpoints:
    web:
      exposure:
        include: "*"
  tracing:
    sampling:
      probability: 1.0


logging:
  level:
    org.springframework.web.cors: DEBUG
    org.springframework.cloud.gateway: DEBUG
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'

metrics:
  distribution:
    percentiles-histogram:
      http:
        server:
          requests: true